# 1. Каким образом файл исходного модуля становится объектом модуля?
ans1 = 'Когда этот файл исходного кода модуля импортируется. В первый раз при импортировании код модуля выполняется, имена, ' \
       'присовоенные в процессе, превращаются в атрибуты объекта модуля.'

# 2. Зачем вам может понадобиться установка переменной среды PYTHONPATH?
ans2 = 'При импортировании из каталогов, отличающихся от текущего каталога.'

# 3. Назовите пять главных компонентов в пути поиска импортируемых модулей.
ans3 = 'Домашний каталог, каталоги в PYTHONPATH, каталоги стандартной библиотеки, все каталоги внутри файлов конфигураций путей .pth ' \
       'в стандартных местах, подкаталог site-packages для установленных сторонних расширений. ' \
       'Настраивать можно переменную PYTHONPATH, файлы .pth.'

# 4. Назовите четыре типа файлов, которые Python может загрузить в ответ на операцию импортирования.
ans4 = '.py, .pyc/.pyo, модуль расширения С (.so в Linux или .dll/.pyd в Windows), каталог с таким же именем для операций ' \
       'импортирования пакетов. Компоненты ZIP, классы Java под управлением Jython, ' \
       '.NET под IronPython и статически связанные расширения С.'

# 5. Что такое пространство имен и что содержит пространство имен модуля?
ans5 = 'Это изолированный пакет переменных - атрибуты объекта пространства имен. Пространство имен модуля содержит все имена, ' \
       'которым производилось присваивание в коде на верхнем уровне файла модуля.'